export const RESPONSE_MESSAGES = {
  SUCCESS: 'Success',
  CREATED: 'Created successfully',
  UPDATED: 'Updated successfully',
  DELETED: 'Deleted successfully',
  NOT_FOUND: 'Resource not found',
  BAD_REQUEST: 'Bad request',
  UNAUTHORIZED: 'Unauthorized access',
  FORBIDDEN: 'Forbidden access',
  SERVER_ERROR: 'Internal server error',

  // Course Specific Messages
  COURSE_CREATED: 'Course created successfully',
  COURSE_UPDATED: 'Course updated successfully',
  COURSE_DELETED: 'Course deleted successfully',
  COURSE_ENROLLED: 'User enrolled for the course successfully',
  COURSE_NOT_FOUND: 'Course not found',

  // Module Specific Messages
  MODULE_CREATED: 'Module created successfully',
  MODULE_UPDATED: 'Module updated successfully',
  MODULE_DELETED: 'Module deleted successfully',

  // Lesson Specific Messages
  LESSON_CREATED: 'Lesson created successfully',
  LESSON_UPDATED: 'Lesson updated successfully',
  LESSON_DELETED: 'Lesson deleted successfully',
  LESSON_ADDED_TO_COURSE: 'Lesson added to course successfully',
  LESSON_REMOVED_FROM_COURSE: 'Lesson removed from course successfully',

  // Media Specific Messages
  MEDIA_UPLOADED: 'Media uploaded successfully',
  MEDIA_DELETED: 'Media deleted successfully',
  MEDIA_ASSOCIATED: 'Media associated with lesson successfully',
  MEDIA_ASSOCIATION_REMOVED: 'Media association removed successfully',

  // Enrollment Specific Messages
  ENROLLMENT_CREATED: 'User enrolled successfully',
  ENROLLMENT_UPDATED: 'Enrollment updated successfully',
  ENROLLMENT_CANCELLED: 'Enrollment cancelled successfully',
  ENROLLMENT_NOT_FOUND: 'Enrollment not found',
  ALREADY_ENROLLED: 'User is already enrolled in this course',
  ADMIN_APPROVAL_REQUIRED: 'Admin approval required for this course',
  ENROLLMENT_ERROR: 'Error enrolling user for course',
  FETCH_ERROR: 'Error retrieving enrollments',
  UPDATE_ERROR: 'Error updating enrollment',
  CANCELLATION_ERROR: 'Error cancelling enrollment',

  // Tracking Specific Messages
  TRACKING_STARTED: 'Tracking started successfully',
  TRACKING_UPDATED: 'Tracking updated successfully',
  TRACKING_COMPLETED: 'Tracking completed successfully',

  // Course Structure Specific Messages
  COURSE_STRUCTURE_UPDATED: 'Course structure updated successfully',

  // Error Messages
  ERROR: {
    COURSE_NOT_FOUND: 'Course not found',
    MODULE_NOT_FOUND: 'Module not found',
    LESSON_NOT_FOUND: 'Lesson not found',
    COURSE_LESSON_NOT_FOUND: 'Lesson not found in course',
    MEDIA_NOT_FOUND: 'Media not found',
    ENROLLMENT_NOT_FOUND: 'Enrollment not found',
    TRACKING_NOT_FOUND: 'Tracking not found',
    COURSE_ALREADY_EXISTS: 'Course with this title already exists',
    COURSE_ALIAS_ALREADY_EXISTS: 'Course with this alias already exists',
    MODULE_ALREADY_EXISTS: 'Module with this title already exists',
    LESSON_ALREADY_EXISTS: 'Lesson with this title already exists',
    USER_ALREADY_ENROLLED: 'User is already enrolled in this course',
    ENROLLMENT_ALREADY_CANCELLED: 'Enrollment is already cancelled',
    COURSE_ALREADY_COMPLETED: 'Course is already marked as completed',
    LESSON_ALREADY_COMPLETED: 'Lesson is already marked as completed',
    CANNOT_ENROLL_COURSE_ENDED: 'Cannot enroll as course has already ended',
    ENROLLMENT_DISABLED: 'Enrollment is disabled for this course',
    INVALID_API_KEY: 'Invalid API key',
    INVALID_USER_ID: 'Invalid user ID',
    MISSING_TENANT_ID: 'Missing tenant ID',
    INVALID_TENANT_ID: 'Invalid tenant ID',
    RESOURCE_ACCESS_DENIED: 'Access to this resource is denied',
    MEDIA_ASSOCIATED_WITH_LESSON: 'Media is associated with a lesson and cannot be deleted',
    MEDIA_ASSOCIATED_WITH_ASSOCIATED_FILE: 'Media is associated with an associated file and cannot be deleted',
    MEDIA_NOT_ASSOCIATED_WITH_LESSON: 'The specified lesson is not associated with this media',
    COURSE_TRACKING_NOT_FOUND: 'Course tracking not found',
    COURSE_COMPLETED: 'Course is completed',
    EXTERNAL_CONFIG_SYNC_FAILED: 'Failed to sync external configuration',
    CONFIG_URL_MISSING: 'Configuration URL is missing',
    CONFIG_UPDATE_FAILED: 'Failed to update configuration',
    EXTERNAL_CONFIG_NOT_FOUND: 'External configuration not found',
    MAX_ATTEMPTS_REACHED: 'Max attempts reached',
    NO_EXISTING_ATTEMPT: 'No existing attempt found',
    RESUME_NOT_ALLOWED: 'Resume not allowed',
    CANNOT_START_COMPLETED: 'Cannot start completed course',
    CANNOT_RESUME_COMPLETED: 'Cannot resume completed course',
    ATTEMPT_NOT_FOUND: 'Attempt not found',
    MODULE_TRACKING_ERROR: 'Error while updating module tracking',
    FILE_REQUIRED_DOCUMENT: 'File is required for document format',
    MEDIA_ALREADY_ASSOCIATED_WITH_LESSON: 'Media is already associated with a lesson',
    ERROR_RETRIEVING_LESSONS: 'Error retrieving lessons',
    LESSON_CHECKED_OUT: 'Lesson is checked out and cannot be updated',
    CANNOT_CHANGE_FORMAT: 'Cannot change format of checked out lesson',
    INVALID_PARAMS_FORMAT: 'Invalid params JSON format',
    ERROR_UPDATING_LESSON: 'Error updating lesson',
    ERROR_REMOVING_LESSON: 'Error removing lesson',
    PARENT_MODULE_INVALID: 'Parent module is invalid',
    COURSE_OR_PARENT_REQUIRED: 'Either courseId or parentId is required',
    UNSUPPORTED_STORAGE_PROVIDER: 'Unsupported storage provider',
    INVALID_UPLOAD_TYPE: 'Invalid upload type',
    MISSING_S3_BUCKET: 'Missing S3 bucket',
    MISSING_AWS_CONFIG: 'Missing AWS configuration',
    DIRECT_UPLOAD_NOT_SUPPORTED: 'Direct upload is not supported for cloud storage. Please use presigned URLs.',
    FILE_TOO_LARGE: 'File size exceeds the maximum allowed size of',
    FAILED_TO_UPLOAD_FILE: 'Failed to upload file',
    INVALID_FILE_TYPE: 'Invalid file type. Allowed types are:',
    FILE_DELETION_NOT_IMPLEMENTED: 'File deletion not implemented for storage provider:',
    CONFIG_NOT_FOUND: 'LMS Configuration not found',
    CONFIG_FAILED: 'Failed to get LMS Configuration',
    LMS_CONFIG_LOAD_FAILED: 'Failed to load LMS Configuration',
    
    // Course Cloning Specific Errors
    COURSE_CLONE_FAILED: 'Failed to clone course',
    MODULE_COPY_FAILED: 'Failed to copy module',
    LESSON_COPY_FAILED: 'Failed to copy lesson',
    MEDIA_COPY_FAILED: 'Failed to copy media',
    ASSOCIATED_FILE_COPY_FAILED: 'Failed to copy associated file',
    SUBMODULE_COPY_FAILED: 'Failed to copy submodule',
    COURSE_SAVE_FAILED: 'Failed to save new course',
    MODULE_SAVE_FAILED: 'Failed to save new module',
    LESSON_SAVE_FAILED: 'Failed to save new lesson',
    MEDIA_SAVE_FAILED: 'Failed to save new media',
    ASSOCIATED_FILE_SAVE_FAILED: 'Failed to save new associated file',
    SOME_LESSONS_NOT_FOUND: 'Some lessons not found or do not belong to the specified module',

    // Course Structure Specific Errors
    LESSONS_NOT_FOUND_IN_STRUCTURE: 'Some lessons not found or do not belong to the specified modules',
    LESSON_MODULE_MISMATCH: 'Some lessons do not belong to the specified modules',
    INVALID_STRUCTURE_DATA: 'Invalid course structure data provided',
    COURSE_TRACKING_STARTED_LESSON_MOVEMENT_NOT_ALLOWED: 'Cannot move lessons between modules as users have already started this course. Only reordering within modules is allowed.',
    MISSING_MODULES_IN_STRUCTURE: (count: number, ids: string) => `Request is missing ${count} module(s): ${ids}. All existing modules must be included in the structure update.`,
    MISSING_LESSONS_IN_STRUCTURE: (count: number, ids: string) => `Request is missing ${count} lesson(s): ${ids}. All existing lessons must be included in the structure update.`,
    SOME_MODULES_NOT_FOUND: 'Some modules not found or do not belong to the specified course',

  },
};

export const VALIDATION_MESSAGES = {
  COMMON: {
    REQUIRED: (field: string) => `${field} is required.`,
    STRING: (field: string) => `${field} must be a string.`,
    MIN_LENGTH: (field: string, length: number) => `${field} must be at least ${length} characters long.`,
    MAX_LENGTH: (field: string, length: number) => `${field} cannot exceed ${length} characters.`,
    UUID: (field: string) => `${field} must be a valid UUID.`,
    BOOLEAN: (field: string) => `${field} must be a boolean.`,
    OBJECT: (field: string) => `${field} must be a valid JSON object.`,
    DATE: (field: string) => `${field} must be a valid date.`,
    ENUM: (field: string) => `${field} must be a valid value.`,
    IMAGE_FORMAT: 'Image must be in JPG or PNG format.',
    NUMBER: (field: string) => `${field} must be a number.`,
    POSITIVE: (field: string) => `${field} must be a positive number.`,
    ARRAY: (field: string) => `${field} must be an array.`,
    MIN_VALUE: (field: string, min: number) => `${field} must be at least ${min}.`,
    MAX_VALUE: (field: string, max: number) => `${field} cannot exceed ${max}.`,
    RANGE: (field: string, min: number, max: number) => `${field} must be between ${min} and ${max}.`,
    FILE_SIZE: (maxSize: string) => `File size must not exceed ${maxSize}.`,
    FILE_TYPE: (types: string[]) => `File must be one of: ${types.join(', ')}.`,
    MIN_ARRAY_LENGTH: (field: string, length: number) => `${field} must contain at least ${length} items.`,
    MAX_ARRAY_LENGTH: (field: string, length: number) => `${field} cannot contain more than ${length} items.`,
    PATTERN: (field: string, pattern: string) => `${field} must match pattern: ${pattern}.`,
    NESTED: (field: string) => `Invalid ${field} object structure.`,
    CONDITIONAL: (field: string, condition: string) => `${field} is required when ${condition}.`,
    DATETIME_CONSTRAINTS: 'Invalid datetime constraints. Start date must be in the future, end date must follow start date, and duration must be between 1 day and 1 year.',
  },
  COURSE: {
    TITLE: 'Course title.',
    ALIAS: 'Course alias/slug.',
    START_DATE: 'Course start date and time.',
    END_DATE: 'Course end date and time.',
    SHORT_DESCRIPTION: 'Short description of the course.',
    DESCRIPTION: 'Detailed description of the course.',
    IMAGE: 'Course thumbnail image URL.',
    FEATURED: 'Whether this is a featured course.',
    FREE: 'Whether this is a free course.',
    STATUS: 'Course status.',
    ADMIN_APPROVAL: 'Whether admin approval is required for enrollment.',
    AUTO_ENROLL: 'Whether users are automatically enrolled.',
    CERTIFICATE_TERM: 'Certificate term configuration.',
    CERTIFICATE_ID: 'Certificate ID.',
    PARAMS: 'Additional parameters for the course.',
  },
  MODULE: {
    TITLE: 'Module title.',
    DESCRIPTION: 'Module description.',
    ORDER: 'Module order/sequence number.',
    COURSE_ID: 'Course ID that this module belongs to.',
  },
  LESSON: {
    TITLE: 'Lesson title.',
    DESCRIPTION: 'Lesson description.',
    CONTENT: 'Lesson content.',
    ORDER: 'Lesson order/sequence number.',
    MODULE_ID: 'Module ID that this lesson belongs to.',
    COURSE_ID: 'Course ID that this lesson belongs to.',
    DURATION: 'Lesson duration in minutes.',
    TYPE: 'Lesson type.',
    STATUS: 'Lesson status.',
    MEDIA_CONTENT: 'Media content associated with the lesson.',
  },
  MEDIA: {
    TYPE: 'Media type.',
    URL: 'Media URL.',
    TITLE: 'Media title.',
    DESCRIPTION: 'Media description.',
    DURATION: 'Media duration in seconds.',
    SIZE: 'Media file size in bytes.',
    FORMAT: 'Media file format.',
    RESOLUTION: 'Media resolution.',
    THUMBNAIL: 'Media thumbnail URL.',
  },
} as const; 